{"version":3,"sources":["components/CityComponent.js","components/WeatherComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherContainer","div","Condition","Location","WeatherInfoContainer","WeatherLabel","WeatherInfoIcons","sunrise","humidity","wind","pressure","InfoContainer","InfoIcon","InfoLabel","InfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","process","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3f4134a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst WeatherLogo = styled.img`\n     width: 140px;\n     height: 140px;\n     margin: 40px auto;\n`\n\nconst ChooseCityLabel = styled.span`\n     font: black;\n     font-size: 1.5em;\n     margin: 10px auto;\n`\nconst SearchBox = styled.form`\n     display: flex;\n     flex-direction: row;\n     border: rgb(0,0,0) solid 1px;\n     border-radius: 2px;\n     font: rgb(0,0,0);\n     font-size: 1.5em;\n     margin: 10px auto;\n\n     & input{\n          padding: 10px;\n          font-size: 1em;\n          border: none;\n          outline: none;\n          font-family: 'Montserrat', sans-serif;\n          font-weight: bold;\n     }\n\n     & button{\n          cursor: pointer;\n          color: rgb(255,255,255);\n          background-color: rgb(0,0,0);\n          border: none;\n          outline: none;\n          font-size: 1em;\n          font-family: 'Montserrat', sans-serif;\n          font-weight: bold;\n          padding: 0 10px;\n     }\n`\n\nconst CityComponent = (props) => {\n     const {updateCity, fetchWeather} = props;\n     return (\n          <>\n               <WeatherLogo src=\"/weather-app/icons/perfect-day.svg\"/>\n               <ChooseCityLabel>Enter the City</ChooseCityLabel>\n               <SearchBox onSubmit={fetchWeather}>\n                    <input placeholder=\"City\" onChange={(e) => updateCity(e.target.value)}/>\n                    <button type=\"submit\">Search</button>\n               </SearchBox>\n          </>\n     );\n};\n\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {WeatherIcons} from \"../App\";\n\nconst WeatherContainer=styled.div`\n     display: flex;\n     flex-direction: row;\n     width: 100%;\n     justify-content: space-between;\n     margin: 30px auto;\n`;\n\nconst WeatherLogo = styled.img`\n     width: 100px;\n     height: 100px;\n     margin: 5px auto;\n`;\n\nconst Condition = styled.span`\n     margin: 20px auto;\n     text-transform: capitalize;\n     font-size: 14px;\n     & span {\n          font-size: 28px;\n     }\n`;\n\nconst Location = styled.span`\n     font-size: 2.5em;\n     font-weight: bold;\n`;\n\nconst WeatherInfoContainer = styled.div`\n     display: flex;\n     width: 90%;\n     flex-direction: row;\n     justify-content: space-evenly;\n     align-items: center;\n     flex-wrap: wrap;\n`;\n\nconst WeatherLabel = styled.span`\n     font-size: 1.5em;\n     font-weight: bold;\n     margin: 20px 25px 10px;\n     text-align: start;\n     width: 100%;\n`;\n\nconst WeatherInfoIcons = {\n    sunrise: \"icons/temp.svg\",\n    humidity: \"icons/humidity.svg\",\n    wind: \"icons/wind.svg\",\n    pressure: \"icons/pressure.svg\",\n};\n\nconst InfoContainer = styled.div`\n     display: flex;\n     margin: 5px 10px;\n     flex-direction: row;\n     justify-content: space-evenly;\n     align-items: center;\n`;\n\nconst InfoIcon = styled.img`\n     width: 36px;\n     height: 36px;\n`;\n\nconst InfoLabel = styled.span`\n     display: flex;\n     flex-direction: column;\n     font-size: 14px;\n     margin: 15px;\n     & span{\n          font-size: 12px;\n          text-transform: capitalize;\n     }\n`;\n\nconst InfoComponent = (props) => {\n     const {name, value} = props;\n     return (\n          <InfoContainer>\n               <InfoIcon src={WeatherInfoIcons[name]}/>\n               {value}\n               <InfoLabel>{name}</InfoLabel>\n          </InfoContainer>\n     );\n};\n\nconst WeatherComponent = (props) => {\n     const {weather} = props;\n     const isDay = weather.weather[0].icon.includes('d') ? true : false;\n     const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n     };\n\n     return (\n          <>\n          <WeatherContainer>\n               <Condition>\n                    <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n                    {`  |  ${weather?.weather[0].description}`}\n               </Condition>\n               <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]}/>\n          </WeatherContainer>\n          <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n          <WeatherInfoContainer>\n               <WeatherLabel>Weather Info</WeatherLabel>\n               <InfoComponent name={isDay ? \"sunset\" : \"sunrise\"} value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\n               <InfoComponent name=\"humidity\" value={weather?.main?.humidity}/>\n               <InfoComponent name=\"wind\" value={weather?.wind?.speed}/>\n               <InfoComponent name=\"pressure\" value={weather?.main?.pressure}/>\n          </WeatherInfoContainer>\n          </>\n     );\n}\nexport default WeatherComponent;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherComponent\";\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nexport const WeatherIcons = {\n  \"01d\": \"weather-app/icons/sunny.svg\",\n  \"01n\": \"weather-app/icons/night.svg\",\n  \"02d\": \"weather-app/icons/day.svg\",\n  \"02n\": \"weather-app/icons/cloudy-night.svg\",\n  \"03d\": \"weather-app/icons/cloudy.svg\",\n  \"03n\": \"weather-app/icons/cloudy.svg\",\n  \"04d\": \"weather-app/icons/perfect-day.svg\",\n  \"04n\": \"weather-app/icons/cloudy-night.svg\",\n  \"09d\": \"weather-app/icons/rain.svg\",\n  \"09n\": \"weather-app/icons/rain-night.svg\",\n  \"10d\": \"weather-app/icons/rain.svg\",\n  \"10n\": \"weather-app/icons/rain-night.svg\",\n  \"11d\": \"weather-app/icons/storm.svg\",\n  \"11n\": \"weather-app/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: 'Montserrat', sans-serif;\n`\n\nconst AppLabel = styled.span`\n  font: black;\n  font-size: 2em;\n  font-weight: bold;\n`\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = \n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>Current Weather</AppLabel>\n      {city && weather ? (\n      <WeatherComponent weather={weather} city={city}/> \n      ) : ( \n      <CityComponent updateCity={updateCity} fetchWeather={fetchWeather}/>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}